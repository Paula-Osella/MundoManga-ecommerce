POSTMAN
register
{
    "first_name": "PRUEBA",
    "last_name": "PRUEBA",
    "email": "PRUEBAn@example.com",
    "password": "lucia123",
    "role": "USER/ADMIN"
}

login: 
{
    "email": "BarreraNorbert@example.com",
    "password": "lucia123"
}

POST PRODUCTS NUEVO:
{
    "name": "PRUEBA",
    "description": "El primer volumen del manga Naruto de Masashi Kishimoto narra la historia de un niño llamado Naruto Uzumaki que lucha por graduarse de la Academia Ninja y convertirse en Hokage, el líder de su aldea",
    "code": "ABC123",
    "price": 150,
    "stock": 50,
    "category": "Shonen",
    "author": "Masashi Kishimoto",
    "status": true,
    "thumbnails": ["https://example.com/image.jpg"]
}

PUT PRODUCT:
{
    "name": "PRUEBA MODIFICADA",
    "description": "Este es un nuevo texto de prueba",
    "price": 200,
    "stock": 40,
    "code": "XYZ789",
    "category": "Seinen",
    "author": "Otro Autor",
    "status": false,
    "thumbnails": ["https://example.com/new-image.jpg"]
}

PUT CART:
{
  "products": [
    { "product": "67646afe0f3856a3d09b7096", "quantity": 8 },
    { "product": "67646cc50f3856a3d09b709c", "quantity": 10 }
  ]
}

POST/PUT ADD PRODUCT CART:
{
    "quantity": 1
}



login = async (req, res, next) => {
    try {
        // Llama al servicio de login
        const token = await this.service.login(req.body);

        // La condición es más robusta:
        // - req.is('json'): Detecta si el Content-Type de la solicitud es JSON.
        // - req.accepts('json'): Detecta si el cliente acepta una respuesta JSON.
        // Si al menos una de las dos es verdadera, asumimos que es un cliente de API.
        if (req.is('json') || req.accepts('json')) {
            // Caso 1: Cliente API (Postman). Responde con éxito en formato JSON.
            res.status(200).json({ status: "success", token: token });
        } else {
            // Caso 2: Navegador web. Redirige con el token en una cookie.
            res.cookie('jwt', token, { httpOnly: true })
               .redirect('/products?message=login_exitoso');
        }

    } catch (error) {
        console.error("Login fallido:", error.message);

        // Manejo de errores: también usamos la condición robusta para responder.
        if (req.is('json') || req.accepts('json')) {
            // Cliente API: Responde con error 401 en JSON.
            res.status(401).json({ status: "error", message: error.message });
        } else {
            // Navegador: Redirige a la página de login con el error en la URL.
            res.redirect('/login?error=' + encodeURIComponent(error.message));
        }
    }
};